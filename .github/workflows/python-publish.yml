# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    branches:
      - none
  
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        pip install -r SensorUmidadeTemperatura/requirements.txt
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        file: SensorUmidadeTemperatura/dockerfile
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/simulator-humidity:latest
        
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - id: deploy
      name: Deploy
      uses: bitovi/github-actions-deploy-docker-to-ec2@v1.0.1
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws_default_region: us-east-1
        script: |
           docker stop simulator-humidity || true
           docker rm simulator-humidity || true
           docker pull ${{ secrets.DOCKERHUB_USERNAME }}/simulator-humidity:latest
           docker run -d --name simulator-humidity ${{ secrets.DOCKERHUB_USERNAME }}/simulator-humidity:latest
    # - name: aws connection and docker deploy in ec2
    #   uses: appleboy/ssh-action@v1.0.3
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     password: ${{ secrets.PASSWORD }}
    #     port: ${{ secrets.PORT }}
    #     script: |
    #       docker stop simulator-humidity || true
    #       docker rm simulator-humidity || true
    #       docker pull ${{ secrets.DOCKERHUB_USERNAME }}/simulator-humidity:latest
    #       docker run -d --name simulator-humidity ${{ secrets.DOCKERHUB_USERNAME }}/simulator-humidity:latest
        
        
